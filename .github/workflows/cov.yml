name: Swift Coverage Test

on:
  pull_request:
    branches:
      - main
      - development 
  push:
    branches: [development, main]

jobs:

  exec-cov:
    runs-on: ubuntu-22.04

    steps:
      - uses: swift-actions/setup-swift@v1
        with:
            swift-version: "5.7"

      - name: Setup SSH Key
        run: | 
            rm -rf ~/.ssh
            mkdir -m 0700 ~/.ssh
            echo "${{ secrets.WORKFLOWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
            echo "${{ secrets.WORKFLOWS_SSH_PUBLIC_KEY }}" > ~/.ssh/id_ed25519.pub
            chmod 0600 ~/.ssh/id_ed25519
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/id_ed25519

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install libgtk-4-bin libgtk-4-common libgtk-4-dev libgtk-4-doc libcogl-pango-dev libcogl-path-dev libcogl-dev libpango1.0-dev gir1.2-pango-1.0 libgdk-pixbuf2.0-dev gir1.2-gdkpixbuf-2.0 libgraphene-1.0-dev gir1.2-graphene-1.0 libglib2.0-dev glib-networking libatk1.0-dev libatk-bridge2.0-dev libcogl-dev libcogl-pango-dev gobject-introspection libgirepository1.0-dev libxml2-dev jq xorg openbox xauth xserver-xorg-video-dummy

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Start Xserver
        run: |
          cd ~
          touch .Xauthority
          xauth generate :0 . trusted
          xauth add ${HOST}:0 . $(xxd -l 16 -p /dev/random)
          echo $DISPLAY
          sudo echo "allowed_users=anybody" > /etc/X11/Xwrapper.config
          sudo X :0 -config ${GITHUB_WORKSPACE}/.dummy-xserver.conf
          startx

      #- name: Reconfigure Private Repo URLs
      #  run: sed -i 's/git@github.com:/https:\/\/${{ secrets.ACCESS_TOKEN }}@github.com\//g' Package.swift

      - name: Run tests
        run: swift test --enable-code-coverage

      - name: Coverage Test
        uses: mattpolzin/swift-codecov-action@0.7.3
        id: cov
        with:
          MINIMUM_COVERAGE: 80

      - name: Post Positive Result
        if: ${{ success() }}
        run: |
          echo "::warning file=Package.swift,line=1,col=1::The current code coverage percentage is passing with ${{ steps.cov.outputs.codecov }} (minimum allowed: ${{ steps.cov.outputs.minimum_coverage }}%)."

      - name: Post Negative Result
        if: ${{ failure() }}
        run: |
          echo "::error file=Package.swift,line=1,col=1::The current code coverage percentage is failing with ${{ steps.cov.outputs.codecov }} (minimum allowed: ${{ steps.cov.outputs.minimum_coverage }}%)."
